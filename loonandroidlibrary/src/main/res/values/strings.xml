<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="filler_text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec sollicitudin mauris varius lacus porttitor eget blandit massa facilisis. Nulla pellentesque odio sed purus fermentum vitae viverra orci faucibus. Sed ullamcorper condimentum vulputate. Curabitur sit amet convallis velit. Vestibulum posuere eleifend risus ac adipiscing. Nam pulvinar nulla a velit faucibus imperdiet. Praesent eget nisi ac justo blandit sagittis. Maecenas at leo nisi, nec varius nisl.\nIn hac habitasse platea dictumst. Morbi neque tortor, vestibulum sed viverra a, luctus vel lorem. Nunc turpis eros, varius eget commodo et, euismod at eros. Sed tincidunt mi purus, vel posuere dui. Vestibulum ante lectus, porta sed mattis bibendum, scelerisque cursus sapien. Cras ultrices imperdiet fermentum. Aenean nisi nulla, euismod non blandit ac, dictum quis libero. Morbi consectetur tempor mollis. Suspendisse eget nunc arcu, vel ullamcorper augue. Integer malesuada, diam nec faucibus mollis, nisl velit euismod enim, ac mattis justo neque sit amet mauris. Vivamus pretium imperdiet pharetra.\nInteger sagittis augue sit amet lectus pulvinar sit amet commodo tortor mattis. Maecenas quis tellus eget ante eleifend sollicitudin non et nibh. Maecenas luctus euismod tristique. Fusce in odio nec diam blandit facilisis. Sed nec arcu eros. Vivamus quis tortor a metus tempus aliquam eget volutpat magna. Pellentesque id ultrices dolor. Sed blandit aliquet quam. Phasellus dapibus euismod vulputate. Aenean blandit, elit vitae vestibulum tincidunt, metus dui accumsan nulla, sit amet vehicula mauris lacus in est. Etiam dignissim pellentesque nulla vel malesuada. Cras vel lorem justo.\nSed condimentum nisl sit amet libero vestibulum hendrerit. Duis auctor tempus placerat. Proin velit ante, ornare nec dictum nec, hendrerit eu arcu. Etiam ut diam ornare quam venenatis pulvinar vitae vel leo. Vivamus consectetur, ante id interdum rhoncus, magna eros pulvinar lacus, a gravida nibh arcu vitae eros. Nulla scelerisque laoreet feugiat. Mauris sit amet gravida felis.\nNulla ac dolor sapien, vestibulum venenatis justo. Cras placerat velit vitae nibh pellentesque ultricies. Suspendisse adipiscing enim eu justo iaculis eu pretium urna fermentum. Duis porttitor nunc non nunc mattis vestibulum. Etiam elit tellus, feugiat in bibendum eget, adipiscing nec metus. Ut ut sem lacus, quis faucibus diam. Curabitur a nulla fermentum tortor dignissim posuere. Fusce faucibus ante ut sem imperdiet imperdiet eget vitae lorem. Etiam fringilla ornare ipsum, in sagittis quam ornare vitae. Nullam venenatis orci sit amet sapien adipiscing gravida. Proin turpis lectus, hendrerit vitae vehicula ut, auctor ac lectus. Pellentesque sollicitudin blandit ligula quis commodo. Mauris vulputate lectus in velit luctus aliquam. Quisque eget tincidunt elit. Quisque et augue quam, sed scelerisque eros.</string>
    <string name="action_settings">Settings</string>
    <string name="hello_world">Hello world!</string>
    <string name="life">        \n生命周期注解
         \n---------------------------------------------------------
    \n1 init代替了OnCreate
	\n2 InNewIntent代替了OnNewIntent
	\n3 InPause代替了OnPause
	\n4 InResume代替了OnResume
	\n5 InRestart代替了OnRestart
	\n6 InStart代替了OnStart
	\n7 InStop代替了OnStop
	\n7 InDestroy代替了OnDestroy
	 \n---------------------------------------------------------
	 \n方法名随意，只需要在方法上加上以上注解即可
	 </string>
    <string name="inlayer">\nInLayer代替了setContentView
	\n1 InLayer必须带有参数，且参数必须为布局layout
	\n2 无需setContentView和onCreate</string>
    <string name="inplayer">  inPlayer注解，只有这个TextView是子类的，上下导航是父类中处理的
    \n---------------------------------------------------------
	\n1 InPLayer主要是用在基（父）类上
	\n2 InLayer中的当参数1个以上的时候，就需要些value，否则直接@InLayer(R.layout.activity_inlayer)
	\n3 InLayer中的parent所表示的id必须在当前父类InPLayer的布局中存在
	\n4 InPLayer主要是和InLayer配套使用
	\n5 InPLayer多用于通用上下导航或者模块
	
	
	\n---------------------------------------------------------
	\n当前activity加载的时候，会先检查当前activity的父类是否含有InPLayer
	\n如果存在InPLayer，那么会把InPLayer中的值setContentView
	\n子类读取@InLayer的parent，如果子类设置的ID在父类布局中存在，把InLayer中的
	\nvalue添加（addview）到父布局中去</string>

    <string name="insource">\nInSource可以自动取出xml中的资源进行填充
	\n1 资源名称要和变量名一样
	\n2 支持Drawable，String，String[]</string>
</resources>